{
  "version": "3.2",
  "log": [
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
            },
            {
              "contract": "OwnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:22",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:16",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC1155": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol:13",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address,uint256)",
          "balanceOfBatch(address[],uint256[])",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,uint256,bytes)",
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MarketplaceV1": {
        "src": "contracts/MarketplaceV1.sol:12",
        "version": {
          "withMetadata": "fb4ac1ee059456c2616d0766b66ea0485d47b8ec4ce949b58bef00cb0db7a452",
          "withoutMetadata": "3ff52f2cb5f9b43f3fae2f803966e14bac70a3c8df880bb727347716c5902473",
          "linkedWithoutMetadata": "3ff52f2cb5f9b43f3fae2f803966e14bac70a3c8df880bb727347716c5902473"
        },
        "inherit": [
          "ReentrancyGuardUpgradeable",
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "updateFee(uint256)",
          "updateRecipient(address)",
          "placeOffer(address,uint256,uint256,uint32,uint32)",
          "cancellOffer(uint256)",
          "buyWithEther(uint256)",
          "buyWithDai(uint256,uint256)",
          "buyWithLink(uint256,uint256)",
          "getEthPrice()",
          "getDaiPrice()",
          "getLinkPrice()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "MarketplaceV1",
              "label": "recipient",
              "type": "t_address",
              "src": "contracts/MarketplaceV1.sol:13"
            },
            {
              "contract": "MarketplaceV1",
              "label": "fee",
              "type": "t_uint256",
              "src": "contracts/MarketplaceV1.sol:14"
            },
            {
              "contract": "MarketplaceV1",
              "label": "offers",
              "type": "t_mapping(t_uint256,t_struct(Offer)563_storage)",
              "src": "contracts/MarketplaceV1.sol:25"
            },
            {
              "contract": "MarketplaceV1",
              "label": "offerCount",
              "type": "t_uint256",
              "src": "contracts/MarketplaceV1.sol:26"
            },
            {
              "contract": "MarketplaceV1",
              "label": "daiToken",
              "type": "t_contract(IERC20Upgradeable)352",
              "src": "contracts/MarketplaceV1.sol:28"
            },
            {
              "contract": "MarketplaceV1",
              "label": "linkToken",
              "type": "t_contract(IERC20Upgradeable)352",
              "src": "contracts/MarketplaceV1.sol:29"
            },
            {
              "contract": "MarketplaceV1",
              "label": "ethPriceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/MarketplaceV1.sol:31"
            },
            {
              "contract": "MarketplaceV1",
              "label": "daiPriceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/MarketplaceV1.sol:32"
            },
            {
              "contract": "MarketplaceV1",
              "label": "linkPriceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/MarketplaceV1.sol:33"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_uint256,t_struct(Offer)563_storage)": {
              "label": "mapping(uint256 => struct MarketplaceV1.Offer)"
            },
            "t_struct(Offer)563_storage": {
              "label": "struct MarketplaceV1.Offer",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address"
                },
                {
                  "label": "tokenAdress",
                  "type": "t_address"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "deadline",
                  "type": "t_uint32"
                },
                {
                  "label": "usdPrice",
                  "type": "t_uint32"
                },
                {
                  "label": "onSale",
                  "type": "t_bool"
                }
              ]
            },
            "t_uint32": {
              "label": "uint32"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(IERC20Upgradeable)352": {
              "label": "contract IERC20Upgradeable"
            },
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    }
  ]
}